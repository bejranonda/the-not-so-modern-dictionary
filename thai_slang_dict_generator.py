# thai_slang_dict_generator.py

import speech_recognition as sr
from gtts import gTTS
# from pydub import AudioSegment
import playsound
import os
import random
import json
# Updated code to replace recognize_google with Whisper + microphone

import whisper
import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wavfile
from scipy.io.wavfile import write 
import tempfile

from slang_pdf_generator import printpdf

from rich.console import Console
from rich.panel import Panel
from rich.prompt import Prompt
from rich.text import Text


console = Console()


# ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ï‡πà‡∏≤‡∏á ‡πÜ
# flipping_sounds = [
    # "flipping sound/pageturn-102978.mp3",
    # "flipping sound/turning-book-pages-and-paper-flipping-sfx-177393.mp3",
    # "flipping sound/book-foley-turn-pages-2-189809.mp3",
    # "flipping sound/book-page-flipping-6905.mp3",
    # "flipping sound/flipping-book-101929.mp3",
    # "flipping sound/flipping-novel-80266.mp3",
    # "flipping sound/flipping-through-a-book-98901.mp3",
    # "flipping sound/one-page-book-flip-101928.mp3"
# ]
flipping_sounds = ["flipping sound/pageturn-102978.mp3"]
invalid_sounds = [
    "error sound/error-call-to-attention-129258.mp3",
]
correct_sound = "correct sound/correct-6033.mp3"
systemstart_sound = "systemstart sound/game-start-6104.mp3"
start_sound = "beep sound/point-smooth-beep-230573.mp3"
end_sound = "beep sound/short-beep-tone-47916.mp3"


## Words
greeting_word  = [
    "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏´‡∏°",
    "Hi ‡∏°‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Å‡∏±‡∏ô‡πÑ‡∏´‡∏°",
    "‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Å‡∏±‡∏ô‡∏î‡∏µ‡∏°‡∏∞",
    "‡∏ä‡πà‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏´‡∏°",
    "‡∏°‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÑ‡∏´‡∏°",
]

notunderstand_word  = [
    "‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏≠‡πà‡∏∞ ‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏π‡∏î‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ",
    "‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡∏û‡∏π‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞",
    "‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏û‡∏π‡∏î‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ",
    "‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏π‡∏î‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ô‡∏∞",
    "‡∏ä‡πà‡∏ß‡∏¢‡∏û‡∏π‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞",
]

playsound.playsound(systemstart_sound)

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• Whisper ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á (‡πÄ‡∏ä‡πà‡∏ô 'small' ‡∏´‡∏£‡∏∑‡∏≠ 'base')
#whisper_model = whisper.load_model("small")

# ‡πÇ‡∏´‡∏•‡∏î‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
if os.path.exists("user_added_slang.json"):
    with open("user_added_slang.json", "r", encoding="utf-8") as f:
        database = json.load(f)
else:
    database = {}
def play_flipping():
    flipping = random.choice(flipping_sounds)
    print(f"- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏•‡∏¥‡∏Å‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠: {flipping}")
    playsound.playsound(flipping)


def speak_thai(text):
    print(f"- ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏π‡∏î: {text}")
    tts = gTTS(text=text, lang='th')
    tts.save("response.mp3")
    playsound.playsound("response.mp3")
    os.remove("response.mp3")

def recognize_thai():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("üé§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ü‡∏±‡∏á...")
        recognizer.adjust_for_ambient_noise(source)
        playsound.playsound(start_sound)
        audio = recognizer.listen(source)
        try:
            recog = recognizer.recognize_google(audio, language="th-TH")
            print(f"- ‡∏ü‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤: {recog}")
            return recog
        except:
            playsound.playsound(random.choice(invalid_sounds))  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
            speak_thai(random.choice(notunderstand_word))
            return recognize_thai()

def recognize_thai_whisper():
    fs = 16000
    seconds = 3
    print("üé§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á (Whisper)...")

    try:
        audio = sd.rec(int(seconds * fs), samplerate=fs, channels=1, dtype='int16')
        playsound.playsound(start_sound)
        sd.wait()

        # ‡πÉ‡∏ä‡πâ tempfile ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .wav ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
        with tempfile.NamedTemporaryFile(delete=False, suffix=".wav", dir=".") as temp_file:
            temp_filename = temp_file.name
            playsound.playsound(end_sound)

            wavfile.write(temp_filename, fs, audio)
            print(f"- temp_filename: {temp_filename}")

        print("üß† ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡πâ‡∏ß‡∏¢ Whisper...")
        result = whisper_model.transcribe(temp_filename, language="th")

        text = result["text"].strip().lower()
        print(f"‚úÖ ‡∏ü‡∏±‡∏á‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤: {text}")

        os.remove(temp_filename)  # ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        return text
    except Exception as e:
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö Whisper: {e}")
        speak_thai("‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤")
        return recognize_thai_whisper()

def add_slang_flow():
    speak_thai("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏π‡∏î‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°")
    #word = recognize_thai()
    console.clear()
    console.print(Panel.fit("üìö [bold magenta]‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏û‡∏à‡∏ô‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°[/bold magenta]", title="üé§ Thai Slang Dictionary"))

    word = Prompt.ask("üìù [bold green]‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°[/bold green]").strip()
    # word = recognize_thai_whisper()
    speak_thai(f"‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤ {word} ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏° ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πà‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤ ‡πÉ‡∏ä‡πà ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà")
    confirm = recognize_thai()
    if "‡πÑ‡∏°‡πà" in confirm:
        speak_thai("‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        return add_slang_flow()

    speak_thai(f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏π‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ {word}")
    meaning = recognize_thai()
    speak_thai(f"‡∏Ñ‡∏∏‡∏ì‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á {meaning} ‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°")
    confirm_meaning = recognize_thai()
    if "‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà" in confirm_meaning:
        speak_thai("‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        return

    speak_thai(f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏π‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ {word}")
    example = recognize_thai()

    database[word] = {
        "meaning": meaning,
        "example": example
    }

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    sorted_db = dict(sorted(database.items()))
    with open("user_added_slang.json", "w", encoding="utf-8") as f:
        json.dump(sorted_db, f, ensure_ascii=False, indent=2)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ (‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÉ‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå)
    print("\nüñ®Ô∏è ‡πÉ‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå")
    print(f"‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á: {word}")
    print(f"‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢: {meaning}")
    print(f"‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: {example}")
    print("------------------------")

    speak_thai(f"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ {word} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞")
    
    
    speak_thai("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏à‡∏ô‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
    confirm = recognize_thai()
    if "‡πÑ‡∏°‡πà" in confirm:
        speak_thai("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà")
        return
    else:
        playsound.playsound(correct_sound)
        printpdf()


def main_loop():
    # playsound.playsound(systemstart_sound)
    # speak_thai("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
    printpdf(
        json_path="user_added_slang.json",
        output_path="output/slang_dictionary.pdf",
        thai_font_path="fonts/THSarabunNew.ttf",
        emoji_font_path="fonts/NotoEmoji-Regular.ttf"
    )
    while True:
        print("üöÄ Starting AI")
        play_flipping()
        greeting = random.choice(greeting_word)
        speak_thai(greeting)
        # command = recognize_thai()
        #command = recognize_thai_whisper()

        console.clear()
        title_text = Text("üìö ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏û‡∏à‡∏ô‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°", style="bold magenta", justify="center")
        console.print(Panel(title_text, title="üé§ Thai Slang Dictionary", border_style="bright_blue"))

        console.print(Panel.fit("üìö [bold magenta]‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡πÅ‡∏•‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏û‡∏à‡∏ô‡∏≤‡∏ô‡∏∏‡∏Å‡∏£‡∏°[/bold magenta]", title="üé§ Thai Slang Dictionary"))

        command = Prompt.ask(f"üìù [bold green]{greeting}[/bold green]").strip()
        
        if "‡πÑ‡∏°‡πà" in command or "no" in command or "‡∏°‡πà‡∏≤‡∏¢" in command:
            speak_thai("‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà")
            # break
        else:
            playsound.playsound(correct_sound)
            add_slang_flow()


# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö
main_loop()
